{
    "openapi": "3.0.0",
    "info": {
        "title": "Yeye API",
        "version": "0.1"
    },
    "paths": {
        "/factions": {
            "get": {
                "summary": "Get all factions",
                "description": "Returns a list of all factions available in the database.",
                "operationId": "5e4689bb43b372f53b7e282576f0c9a6",
                "responses": {
                    "200": {
                        "description": "Factions list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve factions"
                    }
                }
            },
            "post": {
                "summary": "Create new faction",
                "description": "Allows the creation of a new faction in the database.",
                "operationId": "9e26f0acbc1b3c70fc6bc6b854d7cfa4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Faction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Faction created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create faction"
                    }
                }
            }
        },
        "/factions/{id}": {
            "get": {
                "summary": "Get faction by ID",
                "description": "Returns the details of a specific faction based on its ID.",
                "operationId": "faa7c920c254505b90bb90c26706c953",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faction retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Faction not found"
                    },
                    "500": {
                        "description": "Failed to retrieve faction"
                    }
                }
            },
            "put": {
                "summary": "Update existing faction",
                "description": "Allows updating the details of an existing faction.",
                "operationId": "08180dbb2a4206c4736482a8939118b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Faction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Faction updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update faction"
                    }
                }
            },
            "delete": {
                "summary": "Delete faction by ID",
                "description": "Allows deleting a faction from the database using its ID.",
                "operationId": "8f1b71e5940a4f437eae4fbfeda0d7e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Faction deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete faction"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Inicia sesión y obtiene un token JWT",
                "description": "Este endpoint permite a un usuario autenticarse y recibir un token JWT que puede ser utilizado para acceder a rutas protegidas.",
                "operationId": "cd075a1a9ec48298caf48a3b5ef212b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inicio de sesión exitoso, retorna el token JWT",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credenciales inválidas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/equipment": {
            "get": {
                "summary": "Get all equipment",
                "description": "Returns a list of all equipment available in the database.",
                "operationId": "cf783afcb336ad729e9eb59f9db5643d",
                "responses": {
                    "200": {
                        "description": "Equipment list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve equipment"
                    }
                }
            },
            "post": {
                "summary": "Create new equipment",
                "description": "Allows the creation of new equipment in the database.",
                "operationId": "e148b9babbf99d17f4d831af30d642c2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Equipment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create equipment"
                    }
                }
            }
        },
        "/equipment/{id}": {
            "get": {
                "summary": "Get equipment by ID",
                "description": "Returns the details of specific equipment based on its ID.",
                "operationId": "cea56b52e8b1dff50d5c8864b6613a32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Equipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found"
                    },
                    "500": {
                        "description": "Failed to retrieve equipment"
                    }
                }
            },
            "put": {
                "summary": "Update existing equipment",
                "description": "Allows updating the details of existing equipment.",
                "operationId": "8b1c6ae92ebe5baa0ea60bbac5e859d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Equipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update equipment"
                    }
                }
            },
            "delete": {
                "summary": "Delete equipment by ID",
                "description": "Allows deleting equipment from the database using its ID.",
                "operationId": "2f8e25bcb81e935cfb28332c8fa51edc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Equipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete equipment"
                    }
                }
            }
        },
        "/characters": {
            "get": {
                "summary": "Get all characters",
                "description": "Returns a list of all characters available in the database.",
                "operationId": "f3fcf6c5abd21635c9bf051ba0909506",
                "responses": {
                    "200": {
                        "description": "Characters list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve characters"
                    }
                }
            },
            "post": {
                "summary": "Create a new character",
                "description": "Allows the creation of a new character in the database.",
                "operationId": "731352ba822acfbdfb94e1abdf188933",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Character created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Character created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create character"
                    }
                }
            }
        },
        "/characters/{id}": {
            "get": {
                "summary": "Get character by ID",
                "description": "Returns the details of a specific character based on its ID.",
                "operationId": "8ee78f6b76b9fec6155806ea84a62d0f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Character ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Character not found"
                    },
                    "500": {
                        "description": "Failed to retrieve character"
                    }
                }
            },
            "put": {
                "summary": "Update an existing character",
                "description": "Allows updating the details of an existing character.",
                "operationId": "9feb6a519054ca4c1708fa54f8ce64b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Character ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Character updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Character updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update character"
                    }
                }
            },
            "delete": {
                "summary": "Delete a character by ID",
                "description": "Allows deleting a character from the database using its ID.",
                "operationId": "836727e729516e8fee146e3f92c8f464",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Character ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Character deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete character"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Allows a new user to register in the system.",
                "operationId": "56c52ffc6e50262da8e16f83366847b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "newuser"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "securepassword"
                                    },
                                    "role": {
                                        "description": "Role ID (optional, default 3)",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Username already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Username already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to register user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to register user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Get authenticated user data",
                "description": "Returns the information of the currently authenticated user.",
                "operationId": "107f677daf513db90bb75b9b026f9d1e",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "currentuser"
                                        },
                                        "role": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": []
}